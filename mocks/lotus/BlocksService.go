// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import lotus "github.com/NodeFactoryIo/hactar-daemon/internal/lotus"
import mock "github.com/stretchr/testify/mock"

// BlocksService is an autogenerated mock type for the BlocksService type
type BlocksService struct {
	mock.Mock
}

// GetLastHeight provides a mock function with given fields:
func (_m *BlocksService) GetLastHeight() (int64, error) {
	ret := _m.Called()

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLastTipset provides a mock function with given fields:
func (_m *BlocksService) GetLastTipset() (*lotus.TipsetResponse, error) {
	ret := _m.Called()

	var r0 *lotus.TipsetResponse
	if rf, ok := ret.Get(0).(func() *lotus.TipsetResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*lotus.TipsetResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTipsetByHeight provides a mock function with given fields: height
func (_m *BlocksService) GetTipsetByHeight(height int64) (*lotus.TipsetResponse, error) {
	ret := _m.Called(height)

	var r0 *lotus.TipsetResponse
	if rf, ok := ret.Get(0).(func(int64) *lotus.TipsetResponse); ok {
		r0 = rf(height)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*lotus.TipsetResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(height)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
